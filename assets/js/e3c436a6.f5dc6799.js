"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[579],{8215:function(e,t,n){var l=n(7294);t.Z=function(e){var t=e.children,n=e.hidden,o=e.className;return l.createElement("div",{role:"tabpanel",hidden:n,className:o},t)}},6396:function(e,t,n){n.d(t,{Z:function(){return p}});var l=n(7462),o=n(7294),a=n(2389),i=n(9443);var r=function(){var e=(0,o.useContext)(i.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},s=n(9521),u=n(6010),c="tabItem_1uMI";function d(e){var t,n,l,a=e.lazy,i=e.block,d=e.defaultValue,p=e.values,m=e.groupId,f=e.className,h=o.Children.map(e.children,(function(e){if((0,o.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),g=null!=p?p:h.map((function(e){var t=e.props;return{value:t.value,label:t.label}})),v=(0,s.lx)(g,(function(e,t){return e.value===t.value}));if(v.length>0)throw new Error('Docusaurus error: Duplicate values "'+v.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var k=null===d?d:null!=(t=null!=d?d:null==(n=h.find((function(e){return e.props.default})))?void 0:n.props.value)?t:null==(l=h[0])?void 0:l.props.value;if(null!==k&&!g.some((function(e){return e.value===k})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+k+'" but none of its children has the corresponding value. Available values are: '+g.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var b=r(),T=b.tabGroupChoices,x=b.setTabGroupChoices,y=(0,o.useState)(k),w=y[0],C=y[1],I=[],S=(0,s.o5)().blockElementScrollPositionUntilNextRender;if(null!=m){var F=T[m];null!=F&&F!==w&&g.some((function(e){return e.value===F}))&&C(F)}var N=function(e){var t=e.currentTarget,n=I.indexOf(t),l=g[n].value;l!==w&&(S(t),C(l),null!=m&&x(m,l))},V=function(e){var t,n=null;switch(e.key){case"ArrowRight":var l=I.indexOf(e.currentTarget)+1;n=I[l]||I[0];break;case"ArrowLeft":var o=I.indexOf(e.currentTarget)-1;n=I[o]||I[I.length-1]}null==(t=n)||t.focus()};return o.createElement("div",{className:"tabs-container"},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,u.Z)("tabs",{"tabs--block":i},f)},g.map((function(e){var t=e.value,n=e.label;return o.createElement("li",{role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,className:(0,u.Z)("tabs__item",c,{"tabs__item--active":w===t}),key:t,ref:function(e){return I.push(e)},onKeyDown:V,onFocus:N,onClick:N},null!=n?n:t)}))),a?(0,o.cloneElement)(h.filter((function(e){return e.props.value===w}))[0],{className:"margin-vert--md"}):o.createElement("div",{className:"margin-vert--md"},h.map((function(e,t){return(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==w})}))))}function p(e){var t=(0,a.Z)();return o.createElement(d,(0,l.Z)({key:String(t)},e))}},6056:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return u},contentTitle:function(){return c},metadata:function(){return d},toc:function(){return p},default:function(){return f}});var l=n(7462),o=n(3366),a=(n(7294),n(3905)),i=n(6396),r=n(8215),s=["components"],u={sidebar_position:5},c="Filters",d={unversionedId:"tutorial/filters",id:"tutorial/filters",isDocsHomePage:!1,title:"Filters",description:"In this part you'll learn how to correctly manage your state without sacrificing performance",source:"@site/docs/tutorial/filters.mdx",sourceDirName:"tutorial",slug:"/tutorial/filters",permalink:"/stocked/docs/tutorial/filters",editUrl:"https://github.com/ArtiomTr/stocked/edit/main/docs/docs/tutorial/filters.mdx",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Update state",permalink:"/stocked/docs/tutorial/update-state"},next:{title:"Conclusion",permalink:"/stocked/docs/tutorial/conclusion"}},p=[{value:"Creating component",id:"creating-component",children:[],level:2},{value:"Modifing TodoList component",id:"modifing-todolist-component",children:[],level:2},{value:"Final result",id:"final-result",children:[],level:2}],m={toc:p};function f(e){var t=e.components,u=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,l.Z)({},m,u,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"filters"},"Filters"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"In this part you'll learn how to correctly manage your state without sacrificing performance")),(0,a.kt)("h2",{id:"creating-component"},"Creating component"),(0,a.kt)("p",null,"Let's create component, which will contain filters:"),(0,a.kt)(i.Z,{defaultValue:"js",groupId:"language",values:[{label:"JavaScript",value:"js"},{label:"TypeScript",value:"ts"}],mdxType:"Tabs"},(0,a.kt)(r.Z,{value:"js",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"title=Filters.jsx",title:"Filters.jsx"},"import { useCallback } from 'react';\nimport { useStockState } from 'stocked';\n\nexport const Filters = () => {\n    const [titleFilter, setTitleFilter] = useStockState('filters.title');\n\n    const onChange = useCallback((e) => {\n        setTitleFilter(e.target.value);\n    }, [setTitleFilter]);\n\n    return (\n        <div>\n            <input placeholder=\"Search...\" value={titleFilter} onChange={onChange} />\n        </div>\n    );\n}\n"))),(0,a.kt)(r.Z,{value:"ts",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"title=Filters.tsx",title:"Filters.tsx"},"import { ChangeEvent, useCallback } from 'react';\nimport { useStockState } from 'stocked';\n\nexport const Filters = () => {\n    const [titleFilter, setTitleFilter] = useStockState<string>('filters.title');\n\n    const onChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n        setTitleFilter(e.target.value);\n    }, [setTitleFilter]);\n\n    return (\n        <div>\n            <input placeholder=\"Search...\" value={titleFilter} onChange={onChange} />\n        </div>\n    );\n}\n")))),(0,a.kt)("p",null,"And, let's use new component in our ",(0,a.kt)("inlineCode",{parentName:"p"},"App"),":"),(0,a.kt)(i.Z,{defaultValue:"js",groupId:"language",values:[{label:"JavaScript",value:"js"},{label:"TypeScript",value:"ts"}],mdxType:"Tabs"},(0,a.kt)(r.Z,{value:"js",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"title=App.jsx",title:"App.jsx"},"// highlight-next-line\nimport { Filters } from \"./Filters\";\n\n// ...\n\nfunction App() {\n    return (\n        <StockRoot\n            initialValues={{\n                /** ... */\n                // highlight-start\n                filters: {\n                    title: ''\n                }\n                // highlight-end\n            }}\n        >\n            <h1>Todo list!</h1>\n            <NewTodo />\n            {/* highlight-next-line */}\n            <Filters />\n            <TodoList />\n        </StockRoot>\n    );\n}\n\nexport default App;\n"))),(0,a.kt)(r.Z,{value:"ts",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"title=App.tsx",title:"App.tsx"},"// highlight-next-line\nimport { Filters } from \"./Filters\";\n\n// ...\n\ntype AppState = {\n    todos: TodoItemData[];\n    newTodo: {\n        title: string\n    };\n    // highlight-start\n    filters: {\n        title: string;\n    };\n    // highlight-end\n};\n\nfunction App() {\n    return (\n        <StockRoot<AppState>\n            initialValues={{\n                /** ... */\n                // highlight-start\n                filters: {\n                    title: ''\n                }\n                // highlight-end\n            }}\n        >\n            <h1>Todo list!</h1>\n            <NewTodo />\n            {/* highlight-next-line */}\n            <Filters />\n            <TodoList />\n        </StockRoot>\n    );\n}\n\nexport default App;\n")))),(0,a.kt)("p",null,"How it looks like:"),(0,a.kt)("p",{align:"center"},(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Filters result",src:n(1165).Z}))),(0,a.kt)("p",null,"However, currenlty our todo list is not filtered. That's because ",(0,a.kt)("inlineCode",{parentName:"p"},"TodoList")," component does not respond to the filter's changes. "),(0,a.kt)("p",null,"Let's fix it!"),(0,a.kt)("h2",{id:"modifing-todolist-component"},"Modifing TodoList component"),(0,a.kt)("p",null,"Currently, our ",(0,a.kt)("inlineCode",{parentName:"p"},"TodoList")," depends only on length of todos. However, now, we need to make this component re-render each time, when filters are changing. To do this, ",(0,a.kt)("inlineCode",{parentName:"p"},"stocked")," has function ",(0,a.kt)("inlineCode",{parentName:"p"},"watch"),", which lets you to observe some value from stock."),(0,a.kt)(i.Z,{defaultValue:"js",groupId:"language",values:[{label:"JavaScript",value:"js"},{label:"TypeScript",value:"ts"}],mdxType:"Tabs"},(0,a.kt)(r.Z,{value:"js",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"title=TodoList.jsx",title:"TodoList.jsx"},'import { useCallback, useEffect, useState } from "react";\nimport { useStockContext } from "stocked";\nimport { TodoItem } from "./TodoItem";\n\nexport const TodoList = () => {\n    const { watch, getValue } = useStockContext();\n\n    const [visibleKeys, setVisibleKeys] = useState(() =>\n        getValue("todos").map((_, index) => index)\n    );\n\n    const filterItems = useCallback(\n        (filterTitle) => {\n        const allTodos = getValue("todos");\n\n        const newKeys = allTodos\n            .map((value, index) => ({ ...value, index }))\n            .filter(({ title }) =>\n                title.toLowerCase().includes(filterTitle.toLowerCase())\n            )\n            .map(({ index }) => index);\n\n        setVisibleKeys(newKeys);\n        },\n        [getValue]\n    );\n\n    useEffect(\n        // observing length of array\n        () => watch("todos.length", () => filterItems(getValue("filters.title"))),\n        [watch, filterItems, getValue]\n    );\n\n    // observing filter\n    useEffect(() => watch("filters.title", filterItems), [watch, filterItems]);\n\n    return (\n        <ul>\n        {visibleKeys.map((key) => (\n            <TodoItem key={key} index={key} />\n        ))}\n        </ul>\n    );\n};\n'))),(0,a.kt)(r.Z,{value:"ts",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"title=TodoList.tsx",title:"TodoList.tsx"},'import { useCallback, useEffect, useState } from "react";\nimport { useStockContext } from "stocked";\nimport { TodoItemData } from "./App";\nimport { TodoItem } from "./TodoItem";\n\nexport const TodoList = () => {\n    const { watch, getValue } = useStockContext();\n\n    const [visibleKeys, setVisibleKeys] = useState<number[]>(() =>\n        getValue<TodoItemData[]>("todos").map((_, index) => index)\n    );\n\n    const filterItems = useCallback(\n        (filterTitle: string) => {\n        const allTodos = getValue<TodoItemData[]>("todos");\n\n        const newKeys = allTodos\n            .map((value, index) => ({ ...value, index }))\n            .filter(({ title }) =>\n                title.toLowerCase().includes(filterTitle.toLowerCase())\n            )\n            .map(({ index }) => index);\n\n        setVisibleKeys(newKeys);\n        },\n        [getValue]\n    );\n\n    useEffect(\n        // observing length of array\n        () => watch("todos.length", () => filterItems(getValue("filters.title"))),\n        [watch, filterItems, getValue]\n    );\n\n    // observing filter\n    useEffect(() => watch("filters.title", filterItems), [watch, filterItems]);\n\n    return (\n        <ul>\n        {visibleKeys.map((key) => (\n            <TodoItem key={key} index={key} />\n        ))}\n        </ul>\n    );\n};\n')))),(0,a.kt)("h2",{id:"final-result"},"Final result"),(0,a.kt)("p",null,"And that's it the final result"),(0,a.kt)("p",{align:"center"},(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Filters final result",src:n(246).Z}))))}f.isMDXComponent=!0},246:function(e,t,n){t.Z=n.p+"assets/images/tutorial-filters-final-result-4db3555c6d65e921f019bf50e628690e.jpg"},1165:function(e,t,n){t.Z=n.p+"assets/images/tutorial-filters-result-41a85c103a0dd56ffa67050ef92b9e27.jpg"}}]);