(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[101],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return c},kt:function(){return m}});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},l=Object.keys(e);for(o=0;o<l.length;o++)n=l[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(o=0;o<l.length;o++)n=l[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=o.createContext({}),u=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=u(e.components);return o.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},p=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=u(n),m=a,k=p["".concat(s,".").concat(m)]||p[m]||d[m]||l;return n?o.createElement(k,r(r({ref:t},c),{},{components:n})):o.createElement(k,r({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,r=new Array(l);r[0]=p;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,r[1]=i;for(var u=2;u<l;u++)r[u]=n[u];return o.createElement.apply(null,r)}return o.createElement.apply(null,n)}p.displayName="MDXCreateElement"},8215:function(e,t,n){"use strict";var o=n(7294);t.Z=function(e){var t=e.children,n=e.hidden,a=e.className;return o.createElement("div",{role:"tabpanel",hidden:n,className:a},t)}},5064:function(e,t,n){"use strict";n.d(t,{Z:function(){return d}});var o=n(7294),a=n(9443);var l=function(){var e=(0,o.useContext)(a.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},r=n(6010),i="tabItem_1uMI",s="tabItemActive_2DSg";var u=37,c=39;var d=function(e){var t=e.lazy,n=e.block,a=e.defaultValue,d=e.values,p=e.groupId,m=e.className,k=l(),g=k.tabGroupChoices,h=k.setTabGroupChoices,f=(0,o.useState)(a),T=f[0],v=f[1],b=o.Children.toArray(e.children),x=[];if(null!=p){var y=g[p];null!=y&&y!==T&&d.some((function(e){return e.value===y}))&&v(y)}var w=function(e){var t=e.currentTarget,n=x.indexOf(t),o=d[n].value;v(o),null!=p&&(h(p,o),setTimeout((function(){var e,n,o,a,l,r,i,u;(e=t.getBoundingClientRect(),n=e.top,o=e.left,a=e.bottom,l=e.right,r=window,i=r.innerHeight,u=r.innerWidth,n>=0&&l<=u&&a<=i&&o>=0)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(s),setTimeout((function(){return t.classList.remove(s)}),2e3))}),150))},N=function(e){var t,n;switch(e.keyCode){case c:var o=x.indexOf(e.target)+1;n=x[o]||x[0];break;case u:var a=x.indexOf(e.target)-1;n=x[a]||x[x.length-1]}null==(t=n)||t.focus()};return o.createElement("div",{className:"tabs-container"},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":n},m)},d.map((function(e){var t=e.value,n=e.label;return o.createElement("li",{role:"tab",tabIndex:T===t?0:-1,"aria-selected":T===t,className:(0,r.Z)("tabs__item",i,{"tabs__item--active":T===t}),key:t,ref:function(e){return x.push(e)},onKeyDown:N,onFocus:w,onClick:w},n)}))),t?(0,o.cloneElement)(b.filter((function(e){return e.props.value===T}))[0],{className:"margin-vert--md"}):o.createElement("div",{className:"margin-vert--md"},b.map((function(e,t){return(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==T})}))))}},9443:function(e,t,n){"use strict";var o=(0,n(7294).createContext)(void 0);t.Z=o},1060:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return u},contentTitle:function(){return c},metadata:function(){return d},toc:function(){return p},default:function(){return k}});var o=n(2122),a=n(9756),l=(n(7294),n(3905)),r=n(5064),i=n(8215),s=["components"],u={sidebar_position:4},c="Update state",d={unversionedId:"tutorial/update-state",id:"tutorial/update-state",isDocsHomePage:!1,title:"Update state",description:"In this part you'll learn how to properly update state stored in stock",source:"@site/docs/tutorial/update-state.mdx",sourceDirName:"tutorial",slug:"/tutorial/update-state",permalink:"/stocked/docs/tutorial/update-state",editUrl:"https://github.com/ArtiomTr/stocked/edit/master/website/docs/tutorial/update-state.mdx",version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Create state",permalink:"/stocked/docs/tutorial/create-state"},next:{title:"Filters",permalink:"/stocked/docs/tutorial/filters"}},p=[{value:"Checkboxes",id:"checkboxes",children:[]},{value:"Optimization",id:"optimization",children:[]},{value:"New todo",id:"new-todo",children:[]},{value:"Intermediate result",id:"intermediate-result",children:[]}],m={toc:p};function k(e){var t=e.components,u=(0,a.Z)(e,s);return(0,l.kt)("wrapper",(0,o.Z)({},m,u,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"update-state"},"Update state"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"In this part you'll learn how to properly update state stored in stock")),(0,l.kt)("h2",{id:"checkboxes"},"Checkboxes"),(0,l.kt)("p",null,"Let's add checkboxes to our todos."),(0,l.kt)(r.Z,{defaultValue:"js",groupId:"language",values:[{label:"JavaScript",value:"js"},{label:"TypeScript",value:"ts"}],mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"js",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"title=TodoList.jsx",title:"TodoList.jsx"},"import { useStockValue, useStockContext } from 'stocked';\n\nexport const TodoList = () => {\n    // highlight-start\n    const { setValue } = useStockContext();\n    // highlight-end\n    const todos = useStockValue('todos');\n\n    return (\n        <ul>\n            {todos.map(({ title }, key) => (\n                <li key={key}>\n                    {/* highlight-start */}\n                    <input\n                        id={`todo-${key}`}\n                        type=\"checkbox\"\n                        checked={completed}\n                        onChange={(e) =>\n                            setValue(`todos[${key}].completed`, e.target.checked)\n                        }\n                    />\n                    <label htmlFor={`todo-${key}`}>{title}</label>\n                    {/* highlight-end */}\n                </li>\n            ))}\n        </ul>\n    );\n};\n"))),(0,l.kt)(i.Z,{value:"ts",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"title=TodoList.tsx",title:"TodoList.tsx"},"import { useStockValue, useStockContext } from 'stocked';\nimport { TodoItemData } from './App';\n\nexport const TodoList = () => {\n    // highlight-start\n    const { setValue } = useStockContext();\n    // highlight-end\n    const todos = useStockValue<TodoItemData[]>('todos');\n\n    return (\n        <ul>\n            {todos.map(({ title }, key) => (\n                <li key={key}>\n                    {/* highlight-start */}\n                    <input\n                        id={`todo-${key}`}\n                        type=\"checkbox\"\n                        checked={completed}\n                        onChange={(e) =>\n                            setValue(`todos[${key}].completed`, e.target.checked)\n                        }\n                    />\n                    <label htmlFor={`todo-${key}`}>{title}</label>\n                    {/* highlight-end */}\n                </li>\n            ))}\n        </ul>\n    );\n};\n")))),(0,l.kt)("p",null,"As you can see, we're changing todo item's state via ",(0,l.kt)("inlineCode",{parentName:"p"},"setValue")," function. This function deeply sets value in object. "),(0,l.kt)("p",null,"This means, that when our value in stock is:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"{\n    todos: [\n        {\n            title: 'Some title'\n            completed: false,\n        }\n    ]\n}\n")),(0,l.kt)("p",null,"We can access ",(0,l.kt)("inlineCode",{parentName:"p"},"completed")," variable by path ",(0,l.kt)("inlineCode",{parentName:"p"},"todos[0].completed"),"."),(0,l.kt)("p",null,"But, now, when user clicks on checkbox whole app re-renders. We can view it thanks to React developer tools:"),(0,l.kt)("p",{align:"center"},(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Performance",src:n(36).Z}))),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"Cyan outline indicates which component re-renders"))),(0,l.kt)("p",null,"Let's fix this issue!"),(0,l.kt)("h2",{id:"optimization"},"Optimization"),(0,l.kt)("p",null,"Firstly, let's isolate todo item state. To do this, we'll create a new component ",(0,l.kt)("inlineCode",{parentName:"p"},"TodoItem"),"."),(0,l.kt)(r.Z,{defaultValue:"js",groupId:"language",values:[{label:"JavaScript",value:"js"},{label:"TypeScript",value:"ts"}],mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"js",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"title=TodoItem.jsx",title:"TodoItem.jsx"},"import { useCallback } from 'react';\nimport { useStockValue, useStockState } from 'stocked';\n\nexport const TodoItem = ({ index }) => {\n    const title = useStockValue(`todos[${index}].title`);\n    const [completed, setCompleted] = useStockState(`todos[${index}].completed`);\n\n    const onChange = useCallback((e) => {\n        setCompleted(e.target.checked);\n    }, [setCompleted]);\n\n    return (\n        <li>\n            <input\n                id={`todo-${index}`}\n                type=\"checkbox\"\n                checked={completed}\n                onChange={onChange}\n            />\n            <label htmlFor={`todo-${index}`}>{title}</label>\n        </li>\n    );\n}\n"))),(0,l.kt)(i.Z,{value:"ts",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"title=TodoItem.tsx",title:"TodoItem.tsx"},"import { ChangeEvent, useCallback } from 'react';\nimport { useStockValue, useStockState } from 'stocked';\n\ntype TodoItemProps = {\n    index: number;\n}\n\nexport const TodoItem = ({ index }: TodoItemProps) => {\n    const title = useStockValue<string>(`todos[${index}].title`);\n    const [completed, setCompleted] = useStockState<boolean>(`todos[${index}].completed`);\n\n    const onChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n        setCompleted(e.target.checked);\n    }, [setCompleted]);\n\n    return (\n        <li>\n            <input\n                id={`todo-${index}`}\n                type=\"checkbox\"\n                checked={completed}\n                onChange={onChange}\n            />\n            <label htmlFor={`todo-${index}`}>{title}</label>\n        </li>\n    );\n}\n")))),(0,l.kt)("p",null,"Then, we need to change our ",(0,l.kt)("inlineCode",{parentName:"p"},"TodoList")," component:"),(0,l.kt)(r.Z,{defaultValue:"js",groupId:"language",values:[{label:"JavaScript",value:"js"},{label:"TypeScript",value:"ts"}],mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"js",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"title=TodoItem.jsx",title:"TodoItem.jsx"},'import { useStockValue } from "stocked";\nimport { TodoItem } from "./TodoItem";\n\nexport const TodoList = () => {\n    const todos = useStockValue("todos");\n\n    return (\n        <ul>\n            {todos.map((_, key) => (\n                {/* highlight-next-line */}\n                <TodoItem key={key} index={key} />\n            ))}\n        </ul>\n    );\n};\n'))),(0,l.kt)(i.Z,{value:"ts",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"title=TodoItem.tsx",title:"TodoItem.tsx"},'import { useStockValue } from "stocked";\nimport { TodoItemData } from "./App";\nimport { TodoItem } from "./TodoItem";\n\nexport const TodoList = () => {\n    const todos = useStockValue<TodoItemData[]>("todos");\n\n    return (\n        <ul>\n            {todos.map((_, key) => (\n                {/* highlight-next-line */}\n                <TodoItem key={key} index={key} />\n            ))}\n        </ul>\n    );\n};\n')))),(0,l.kt)("p",null,"As you can see, we don't need todos array to render them - we need only count. So, let's get only array length inside ",(0,l.kt)("inlineCode",{parentName:"p"},"TodoList")," component:"),(0,l.kt)(r.Z,{defaultValue:"js",groupId:"language",values:[{label:"JavaScript",value:"js"},{label:"TypeScript",value:"ts"}],mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"js",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"title=TodoList.jsx",title:"TodoList.jsx"},'import { useStockValue } from "stocked";\nimport { TodoItem } from "./TodoItem";\n\nexport const TodoList = () => {\n    const todoCount = useStockValue("todos.length");\n\n    return (\n        <ul>\n            {/* highlight-next-line */}\n            {new Array(todoCount).fill(0).map((_, key) => (\n                <TodoItem key={key} index={key} />\n            ))}\n        </ul>\n    );\n};\n'))),(0,l.kt)(i.Z,{value:"ts",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"title=TodoList.tsx",title:"TodoList.tsx"},'import { useStockValue } from "stocked";\nimport { TodoItem } from "./TodoItem";\n\nexport const TodoList = () => {\n    const todoCount = useStockValue<number>("todos.length");\n\n    return (\n        <ul>\n            {/* highlight-next-line */}\n            {new Array(todoCount).fill(0).map((_, key) => (\n                <TodoItem key={key} index={key} />\n            ))}\n        </ul>\n    );\n};\n')))),(0,l.kt)("p",null,"So, let's check our performance now:"),(0,l.kt)("p",{align:"center"},(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Optimized list&#39;s performance",src:n(6806).Z}))),(0,l.kt)("p",null,"Perfect! Now, only one todo is highlighted!"),(0,l.kt)("h2",{id:"new-todo"},"New todo"),(0,l.kt)("p",null,"Finally, let's create possibility to add new todo. For this feature, we will create ",(0,l.kt)("inlineCode",{parentName:"p"},"NewTodo")," component:"),(0,l.kt)(r.Z,{defaultValue:"js",groupId:"language",values:[{label:"JavaScript",value:"js"},{label:"TypeScript",value:"ts"}],mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"js",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"title=NewTodo.jsx",title:"NewTodo.jsx"},"import { useCallback } from 'react';\nimport { useStockState, useStockContext } from 'stocked';\n\nexport const NewTodo = () => {\n    const { getValue, setValue } = useStockContext();\n    \n    const [title, setTitle] = useStockState('newTodo.title');\n\n    const onChange = useCallback((e) => {\n        setTitle(e.target.value);    \n    }, [setTitle]);\n\n    const createNewTodo = useCallback(() => {\n        const currentTitle = getValue('newTodo.title');\n        const currentTodos = getValue('todos');\n\n        setValue('todos', [...currentTodos, {\n            title: currentTitle,\n            completed: false,\n        }]);\n        \n        setValue('newTodo.title', '');\n    }, [getValue, setValue]);\n\n    return (\n        <div>\n            <div>\n                <label htmlFor=\"new-title\">New todo:</label>\n                <input id=\"new-title\" value={title} onChange={onChange} />\n            </div>\n            <button onClick={createNewTodo}>+ Add</button>\n        </div>\n    );\n};\n"))),(0,l.kt)(i.Z,{value:"ts",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"title=NewTodo.tsx",title:"NewTodo.tsx"},"import { ChangeEvent, useCallback } from 'react';\nimport { useStockState, useStockContext } from 'stocked';\nimport { TodoItemData } from './App'\n\nexport const NewTodo = () => {\n    const { getValue, setValue } = useStockContext();\n    \n    const [title, setTitle] = useStockState<string>('newTodo.title');\n\n    const onChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n        setTitle(e.target.value);    \n    }, [setTitle]);\n\n    const createNewTodo = useCallback(() => {\n        const currentTitle = getValue('newTodo.title');\n        const currentTodos = getValue<TodoItemData[]>('todos');\n\n        setValue('todos', [...currentTodos, {\n            title: currentTitle,\n            completed: false,\n        }]);\n\n        setValue('newTodo.title', '');\n    }, [getValue, setValue]);\n\n    return (\n        <div>\n            <div>\n                <label htmlFor=\"new-title\">New todo:</label>\n                <input id=\"new-title\" value={title} onChange={onChange} />\n            </div>\n            <button onClick={createNewTodo}>+ Add</button>\n        </div>\n    );\n};\n")))),(0,l.kt)("p",null,"And use this component in ",(0,l.kt)("inlineCode",{parentName:"p"},"App"),":"),(0,l.kt)(r.Z,{defaultValue:"js",groupId:"language",values:[{label:"JavaScript",value:"js"},{label:"TypeScript",value:"ts"}],mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"js",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"title=App.jsx",title:"App.jsx"},"// highlight-next-line\nimport { NewTodo } from \"./NewTodo\";\n\n// ...\n\nfunction App() {\n    return (\n        <StockRoot\n            initialValues={{\n                /** */\n                // highlight-start\n                newTodo: {\n                    title: ''\n                }\n                // highlight-end\n            }}\n        >\n            <h1>Todo list!</h1>\n            {/* highlight-next-line */}\n            <NewTodo />\n            <TodoList />\n        </StockRoot>\n    );\n}\n\nexport default App;\n"))),(0,l.kt)(i.Z,{value:"ts",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"title=App.tsx",title:"App.tsx"},"// highlight-next-line\nimport { NewTodo } from \"./NewTodo\";\n\n// ...\n\ntype AppState = {\n    todos: TodoItemData[];\n    // highlight-start\n    newTodo: {\n        title: string\n    }\n    // highlight-end\n};\n\nfunction App() {\n    return (\n        <StockRoot<AppState>\n            initialValues={{\n                /** ... */\n                // highlight-start\n                newTodo: {\n                    title: ''\n                }\n                // highlight-end\n            }}\n        >\n            <h1>Todo list!</h1>\n            {/* highlight-next-line */}\n            <NewTodo />\n            <TodoList />\n        </StockRoot>\n    );\n}\n\nexport default App;\n")))),(0,l.kt)("h2",{id:"intermediate-result"},"Intermediate result"),(0,l.kt)("p",null,"And this is what we have at the moment:"),(0,l.kt)("p",{align:"center"},(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Result",src:n(1719).Z}))),(0,l.kt)("p",null,"Let's move on."))}k.isMDXComponent=!0},6010:function(e,t,n){"use strict";function o(e){var t,n,a="";if("string"==typeof e||"number"==typeof e)a+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=o(e[t]))&&(a&&(a+=" "),a+=n);else for(t in e)e[t]&&(a&&(a+=" "),a+=t);return a}function a(){for(var e,t,n=0,a="";n<arguments.length;)(e=arguments[n++])&&(t=o(e))&&(a&&(a+=" "),a+=t);return a}n.d(t,{Z:function(){return a}})},6806:function(e,t,n){"use strict";t.Z=n.p+"assets/images/tutorial-optimized-list-5021c14b230690dff3b167422a0d9c98.jpg"},36:function(e,t,n){"use strict";t.Z=n.p+"assets/images/tutorial-performance-751f00238a44ae6b1bc927d4c17f4cb2.jpg"},1719:function(e,t,n){"use strict";t.Z=n.p+"assets/images/tutorial-update-state-result-46dab7a6b8c5fd6499492faaba8ede58.jpg"}}]);